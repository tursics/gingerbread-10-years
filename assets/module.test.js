var test = (function () {
    var testLevels = [
        {
            'title': '3 in a column solving',
            'method': 'solve.board',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🗑️🗑️🗑️🗑️🗑️🗑️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🗑️🗑️🗑️🗑️🗑️🗑️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🗑️🗑️🗑️🗑️🗑️🗑️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': '4 in a column solving',
            'method': 'solve.board',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🐷🐮🐯🐦🐭🐵🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔽🔽🔽🔽🔽🔽⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔄🔄🔄🔄🔄🔄⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔼🔼🔼🔼🔼🔼⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⏫️⏫️⏫️⏫️⏫️⏫️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': '5 in a column solving',
            'method': 'solve.board',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🏵️🏵️🏵️🏵️🏵️🏵️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⏬️⏬️⏬️⏬️⏬️⏬️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔽🔽🔽🔽🔽🔽⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔄🔄🔄🔄🔄🔄⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔼🔼🔼🔼🔼🔼⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⏫️⏫️⏫️⏫️⏫️⏫️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': '3 in a row solving',
            'method': 'solve.board',
            'design': [
                '🅾️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍎🍎🅾️',
                '🅾️🍐🍐🍐🅾️',
                '🅾️🍋🍋🍋🅾️',
                '🅾️🥥🥥🥥🅾️',
                '🅾️🫐🫐🫐🅾️',
                '🅾️🍠🍠🍠🅾️',
                '🅾️🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️'
            ],
        },
        {
            'title': '4 in a row solving',
            'method': 'solve.board',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍎🍎🍎🅾️',
                '🅾️🍐🍐🍐🍐🅾️',
                '🅾️🍋🍋🍋🍋🅾️',
                '🅾️🥥🥥🥥🥥🅾️',
                '🅾️🫐🫐🫐🫐🅾️',
                '🅾️🍠🍠🍠🍠🅾️',
                '🅾️🐷🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️🐖⬜️⬜️🅾️',
                '🅾️⬜️🐄⬜️⬜️🅾️',
                '🅾️⬜️🐅⬜️⬜️🅾️',
                '🅾️⬜️🦢⬜️⬜️🅾️',
                '🅾️⬜️🐁⬜️⬜️🅾️',
                '🅾️⬜️🐒⬜️⬜️🅾️',
                '🅾️🐷🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️'
            ],
        },
        {
            'title': '5 in a row solving',
            'method': 'solve.board',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍎🍎🍎🍎🅾️',
                '🅾️🍐🍐🍐🍐🍐🅾️',
                '🅾️🍋🍋🍋🍋🍋🅾️',
                '🅾️🥥🥥🥥🥥🥥🅾️',
                '🅾️🫐🫐🫐🫐🫐🅾️',
                '🅾️🍠🍠🍠🍠🍠🅾️',
                '🅾️🐷🐷🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️🐷🐷🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️'
            ],
        },
        {
            'title': 'Column solving',
            'method': 'solve.board',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⚪️⚪️⚪️⚪️🫐🍠🅾️',
                '🅾️⚪️⚪️🍋🥥🫐🍠🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🅾️',
                '🅾️⚪️🍐🍋🥥🫐🍠🅾️',
                '🅾️⚪️⚪️⚪️🥥🫐🍠🅾️',
                '🅾️⚪️⚪️⚪️⚪️⚪️🍠🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⚪️⚪️⚪️⚪️🫐🍠🅾️',
                '🅾️⚪️⚪️⬜️⬜️⬜️🍠🅾️',
                '🅾️🍎⬜️🐯⬜️⬜️⬜️🅾️',
                '🅾️🍎⬜️⬜️🏵️🏵️⬜️🅾️',
                '🅾️⚪️⬜️⬜️⬜️⬜️🏵️🅾️',
                '🅾️⚪️⚪️⚪️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️⚪️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️🔽⏬️⏬️⬜️⬜️',
                '⬜️⬜️🗑️🔄🔽🔽⏬️⬜️',
                '⬜️⬜️🗑️🔼🔄🔄🔽⬜️',
                '⬜️⬜️🗑️⏫️🔼🔼🔄⬜️',
                '⬜️⬜️⬜️⬜️⏫️⏫️🔼⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⏫️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': 'Row solving',
            'method': 'solve.board',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⚪️⚪️🍎🍎⚪️⚪️⚪️🅾️',
                '🅾️⚪️⚪️🍐🍐🍐⚪️⚪️🅾️',
                '🅾️⚪️🍋🍋🍋🍋⚪️⚪️🅾️',
                '🅾️⚪️🥥🥥🥥🥥🥥⚪️🅾️',
                '🅾️🫐🫐🫐🫐🫐🫐⚪️🅾️',
                '🅾️🍠🍠🍠🍠🍠🍠🍠🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⚪️⚪️🍎🍎⚪️⚪️⚪️🅾️',
                '🅾️⚪️⚪️⬜️⬜️⬜️⚪️⚪️🅾️',
                '🅾️⚪️⬜️🐅⬜️⬜️⚪️⚪️🅾️',
                '🅾️⚪️⬜️⬜️🏵️⬜️⬜️⚪️🅾️',
                '🅾️🫐⬜️⬜️🏵️⬜️⬜️⚪️🅾️',
                '🅾️🍠🍠⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️🗑️🗑️🗑️⬜️⬜️⬜️',
                '⬜️⬜️▶️🔄◀️⏪️⬜️⬜️⬜️',
                '⬜️⬜️⏩️▶️🔄◀️⏪️⬜️⬜️',
                '⬜️⬜️⏩️▶️🔄◀️⏪️⬜️⬜️',
                '⬜️⬜️⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': 'Spawn complete board',
            'method': 'board.spawn',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': 'Spawn smaller board',
            'method': 'board.spawn',
            'design': [
                '🅾️🅾️⬇️⬇️⬇️⬇️⬇️🅾️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️🅾️⬇️⬇️⬇️⬇️⬇️🅾️🅾️',
                '🅾️⬜️✴️✴️✴️✴️✴️⬜️🅾️',
                '🅾️⬜️✴️✴️✴️✴️✴️⬜️🅾️',
                '🅾️⬜️✴️✴️✴️✴️✴️⬜️🅾️',
                '🅾️⬜️✴️✴️✴️✴️✴️⬜️🅾️',
                '🅾️⬜️✴️✴️✴️✴️✴️⬜️🅾️',
                '🅾️⬜️✴️✴️✴️✴️✴️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': 'Spawn split board',
            'method': 'board.spawn',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': 'Spawn hole board',
            'method': 'board.spawn',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🅾️🅾️🅾️⬜️⬜️🅾️',
                '🅾️⬜️🅾️🅾️⬜️🅾️🅾️⬜️🅾️',
                '🅾️⬜️⬜️⬇️⬇️⬇️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️✴️✴️✴️✴️✴️✴️✴️🅾️',
                '🅾️✴️✴️🅾️🅾️🅾️✴️✴️🅾️',
                '🅾️✴️🅾️🅾️⬜️🅾️🅾️✴️🅾️',
                '🅾️✴️⬜️⬇️⬇️⬇️⬜️✴️🅾️',
                '🅾️✴️⬜️✴️✴️✴️⬜️✴️🅾️',
                '🅾️✴️⬜️✴️✴️✴️⬜️✴️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        }
    ];

    function init() {
    }

    function funcRun() {
        testLevels.forEach(testLevel => {
            var method = testLevel.method;
            var repository = board.copyRepositoryFromDesign(testLevel.design);

            switch (method) {
                case 'solve.board':
                    repository = solve.board(repository);
                    break;
                case 'board.spawn':
                    repository = board.spawn(repository);
                    break;
                default:
                    console.error('No method defined');
            }

            var success = board.equalBoardsWithLogging(repository.initial, testLevel.design) && board.equalBoardsWithLogging(repository.cleaned, testLevel.expectedResult) && board.equalBoardsWithLogging(repository.animate, testLevel.expectedAnimation);

            if (!success) {
                console.error('Test "' + testLevel.title + '" failed.');
                console.table(repository.initial);
                console.table(repository.cleaned);
                console.table(repository.animate);
            }
        });
    }

    init();

    return {
        run: funcRun,
    };
}());