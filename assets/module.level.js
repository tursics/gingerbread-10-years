var level = (function () {
    var debugLevel = {
        'design': [
            '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
            '🅾️🍎🍐🍋🥥🫐🍠🍎🍐🍋🥥🅾️',
            '🅾️🍐🍐🍋🥥🫐🍠🍎🍐🍋🥥🅾️',
            '🅾️🍋🍋🍋🥥🫐🍠🍎🍐🍋🥥🅾️',
            '🅾️🥥🥥🥥🥥🫐🍠🍎🍐🍋🥥🅾️',
            '🅾️🫐🫐🫐🫐🫐🍠🍎🍐🍋🥥🅾️',
            '🅾️🍠🍠🍠🍠🍠🍠🍎🍐🍋🥥🅾️',
            '🅾️🍎🍎🍎🍎🍎🍎🍎🍐🍋🥥🅾️',
            '🅾️🍐🍐🍐🍐🍐🍐🍐🍐🍋🥥🅾️',
            '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
        ]
    };
    var testLevel = [
        {
            'title': '3 in a column solving',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🗑️🗑️🗑️🗑️🗑️🗑️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🗑️🗑️🗑️🗑️🗑️🗑️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🗑️🗑️🗑️🗑️🗑️🗑️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': '4 in a column solving',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🐷🐮🐯🐦🐭🐵🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔽🔽🔽🔽🔽🔽⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔄🔄🔄🔄🔄🔄⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔼🔼🔼🔼🔼🔼⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⏫️⏫️⏫️⏫️⏫️⏫️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': '5 in a column solving',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🏵️🏵️🏵️🏵️🏵️🏵️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️🐷🐖🐮🐄🐯🐅🐦🦢🐭🐁🐵🐒⬜️⚪️🏵️🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⏬️⏬️⏬️⏬️⏬️⏬️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔽🔽🔽🔽🔽🔽⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔄🔄🔄🔄🔄🔄⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️🔼🔼🔼🔼🔼🔼⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⏫️⏫️⏫️⏫️⏫️⏫️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': '3 in a row solving',
            'design': [
                '🅾️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍎🍎🅾️',
                '🅾️🍐🍐🍐🅾️',
                '🅾️🍋🍋🍋🅾️',
                '🅾️🥥🥥🥥🅾️',
                '🅾️🫐🫐🫐🅾️',
                '🅾️🍠🍠🍠🅾️',
                '🅾️🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️🗑️🗑️🗑️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️'
            ],
        },
        {
            'title': '4 in a row solving',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍎🍎🍎🅾️',
                '🅾️🍐🍐🍐🍐🅾️',
                '🅾️🍋🍋🍋🍋🅾️',
                '🅾️🥥🥥🥥🥥🅾️',
                '🅾️🫐🫐🫐🫐🅾️',
                '🅾️🍠🍠🍠🍠🅾️',
                '🅾️🐷🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️🐖⬜️⬜️🅾️',
                '🅾️⬜️🐄⬜️⬜️🅾️',
                '🅾️⬜️🐅⬜️⬜️🅾️',
                '🅾️⬜️🦢⬜️⬜️🅾️',
                '🅾️⬜️🐁⬜️⬜️🅾️',
                '🅾️⬜️🐒⬜️⬜️🅾️',
                '🅾️🐷🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️▶️🔄◀️⏪️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️'
            ],
        },
        {
            'title': '5 in a row solving',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️🍎🍎🍎🍎🍎🅾️',
                '🅾️🍐🍐🍐🍐🍐🅾️',
                '🅾️🍋🍋🍋🍋🍋🅾️',
                '🅾️🥥🥥🥥🥥🥥🅾️',
                '🅾️🫐🫐🫐🫐🫐🅾️',
                '🅾️🍠🍠🍠🍠🍠🅾️',
                '🅾️🐷🐷🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️🐷🐷🐷🐷🐷🅾️',
                '🅾️🐖🐖🐖🐖🐖🅾️',
                '🅾️🐮🐮🐮🐮🐮🅾️',
                '🅾️🐄🐄🐄🐄🐄🅾️',
                '🅾️🐯🐯🐯🐯🐯🅾️',
                '🅾️🐅🐅🐅🐅🐅🅾️',
                '🅾️🐦🐦🐦🐦🐦🅾️',
                '🅾️🦢🦢🦢🦢🦢🅾️',
                '🅾️🐭🐭🐭🐭🐭🅾️',
                '🅾️🐁🐁🐁🐁🐁🅾️',
                '🅾️🐵🐵🐵🐵🐵🅾️',
                '🅾️🐒🐒🐒🐒🐒🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️⚪️🅾️',
                '🅾️🏵️🏵️🏵️🏵️🏵️🅾️',
                '🅾️🐞🐞🐞🐞🐞🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️'
            ],
        },
        {
            'title': 'Column solving',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⚪️⚪️⚪️⚪️🫐🍠🅾️',
                '🅾️⚪️⚪️🍋🥥🫐🍠🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🅾️',
                '🅾️🍎🍐🍋🥥🫐🍠🅾️',
                '🅾️⚪️🍐🍋🥥🫐🍠🅾️',
                '🅾️⚪️⚪️⚪️🥥🫐🍠🅾️',
                '🅾️⚪️⚪️⚪️⚪️⚪️🍠🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⚪️⚪️⚪️⚪️🫐🍠🅾️',
                '🅾️⚪️⚪️⬜️⬜️⬜️🍠🅾️',
                '🅾️🍎⬜️🐯⬜️⬜️⬜️🅾️',
                '🅾️🍎⬜️⬜️🏵️🏵️⬜️🅾️',
                '🅾️⚪️⬜️⬜️⬜️⬜️🏵️🅾️',
                '🅾️⚪️⚪️⚪️⬜️⬜️⬜️🅾️',
                '🅾️⚪️⚪️⚪️⚪️⚪️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️🔽⏬️⏬️⬜️⬜️',
                '⬜️⬜️🗑️🔄🔽🔽⏬️⬜️',
                '⬜️⬜️🗑️🔼🔄🔄🔽⬜️',
                '⬜️⬜️🗑️⏫️🔼🔼🔄⬜️',
                '⬜️⬜️⬜️⬜️⏫️⏫️🔼⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⏫️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        },
        {
            'title': 'Row solving',
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⚪️⚪️🍎🍎⚪️⚪️⚪️🅾️',
                '🅾️⚪️⚪️🍐🍐🍐⚪️⚪️🅾️',
                '🅾️⚪️🍋🍋🍋🍋⚪️⚪️🅾️',
                '🅾️⚪️🥥🥥🥥🥥🥥⚪️🅾️',
                '🅾️🫐🫐🫐🫐🫐🫐⚪️🅾️',
                '🅾️🍠🍠🍠🍠🍠🍠🍠🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedResult': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⚪️⚪️🍎🍎⚪️⚪️⚪️🅾️',
                '🅾️⚪️⚪️⬜️⬜️⬜️⚪️⚪️🅾️',
                '🅾️⚪️⬜️🐅⬜️⬜️⚪️⚪️🅾️',
                '🅾️⚪️⬜️⬜️🏵️⬜️⬜️⚪️🅾️',
                '🅾️🫐⬜️⬜️🏵️⬜️⬜️⚪️🅾️',
                '🅾️🍠🍠⬜️⬜️🏵️⬜️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ],
            'expectedAnimation': [
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
                '⬜️⬜️⬜️🗑️🗑️🗑️⬜️⬜️⬜️',
                '⬜️⬜️▶️🔄◀️⏪️⬜️⬜️⬜️',
                '⬜️⬜️⏩️▶️🔄◀️⏪️⬜️⬜️',
                '⬜️⬜️⏩️▶️🔄◀️⏪️⬜️⬜️',
                '⬜️⬜️⬜️⏩️▶️🔄◀️⏪️⬜️',
                '⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️',
            ],
        }
    ];
    var gameLevel = [
        {
            'design': [
                '🅾️⬇️⬇️⬇️⬇️⬇️⬇️⬇️⬇️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️⬜️⬜️⬜️⬜️⬜️⬜️⬜️⬜️🅾️',
                '🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️🅾️'
            ]
        },
    ];

    function init() {
    }

    function funcGetDebug() {
        return debugLevel;
    }

    function funcGetTests() {
        return testLevel;
    }

    function funcGet(id) {
        return gameLevel[id];
    }

    function funcLength() {
        return gameLevel.length;
    }

    init();

    return {
        get: funcGet,
        getDebug: funcGetDebug,
        getTests: funcGetTests,
        length: funcLength,
    };
}());